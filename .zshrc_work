# If you come from bash you might have to change your $PATH.
export PATH=$HOME/bin:/usr/local/bin:$PATH

# SPECIFIC for beamery - Add go bin to use beamery toolings
export PATH=/Users/Matt.Bidewell/go/bin:$PATH


# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

ZSH_THEME="af-magic"

plugins=(git colored-man-pages alias-tips zsh-autosuggestions common-aliases encode64)

source $ZSH/oh-my-zsh.sh

export NVM_DIR="$HOME/.nvm"
[ -s "$(brew --prefix)/opt/nvm/nvm.sh" ] && \. "$(brew --prefix)/opt/nvm/nvm.sh" # This loads nvm
[ -s "$(brew --prefix)/opt/nvm/etc/bash_completion.d/nvm" ] && \. "$(brew --prefix)/opt/nvm/etc/bash_completion.d/nvm" # This loads nvm bash_completion


# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/Matt.Bidewell/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/Matt.Bidewell/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/Matt.Bidewell/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/Matt.Bidewell/google-cloud-sdk/completion.zsh.inc'; fi

export PATH=${HOME}/bin:$PATH

alias wb='cd ~/Workspace/beamery'
alias wp='cd ~/Workspace/personal'
alias wbi='cd ~/workspace/beamery/integrations'
alias wbd='cd ~/workspace/beamery/devops'

###### SPECIFIC FOR BEAMERY:

# ~/.zshrc

# Enigma: variables
export LOCAL=true
export ens=staging # default environment
export ein=workday # default integration
export eco=invalid # default company
echo ✨ using $ens namespace
echo ✨ using $eco company
echo ✨ using $ein integration

# Enigma: helpers
alias itrq='sed -e '"'"'s/^"//'"'"' -e '"'"'s/"$//'"'"' <<<"$opt"' # removes trailing quotes

# Enigma: change acive namespace
alias istg='export ens=staging && echo ✨ using staging namespace'
alias isbx='export ens=sandbox && echo ✨ using sandbox namespace'
alias iprd='export ens=production && echo ✨ using production namespace'
alias iprdeu='export ens=production-europe && echo ✨ using production-europe namespace'
alias iprdru='export ens=production-russia && echo ✨ using production-russia namespace'

# Enigma: change active company
ic() {
  export eco=${1:-invalid}
  echo ✨ using $eco company
}

# Enigma: change active integration
alias ibe='export ein=beamery && echo ✨ using beamery integration'
alias iwd='export ein=workday && echo ✨ using workday integration'
alias isf='export ein=sftp && echo ✨ using sftp integration'
alias ibr='export ein=brassring && echo ✨ using brassring integration'
alias igh='export ein=greenhouse && echo ✨ using greenhouse integration'
alias ics='export ein=cornerstone && echo ✨ using cornerstone integration'

# Enigma: list all companies
alias iapl='iapp c l -n $ens | jq'

# Enigma: find company, copy its id to clipboard, change active company
iapf() {
  local json="$(iapp c l -n $ens | fx 'select(x => x.name.toLowerCase().includes("'$1'".toLowerCase()))')"
  echo $json | jq .beameryId | tail -n +${2:-1} | head -n 1 | itrq | xargs echo -n | pbcopy
  export eco=$(pbpaste)
  export eco=${eco:-invalid}
  echo -n $eco | pbcopy
  echo $json | jq
  echo ''
  echo ✨ using $eco company
  echo ✨ $eco copied to clipboard
}

# Enigma: other iapp shortcuts
alias iapg='iapp c g -n $ens -c $eco | jq'
alias iapgf='iapg | fx'
alias iapd='iapp c decrypt-auth -n $ens -c $eco -i $ein | jq'

# Enigma: iconf shortcuts
alias iconfs='iconf show -n $ens | fx '"'"'.global'"'"' "x => Object.keys(x).filter(k => !!x[k]['"'"'$eco'"'"'])" | jq'

export GOPATH=$(go env GOPATH)
echo "GOPATH $GOPATH"
export GOPRIVATE=gitlab.com/Beamery/*
source /Users/Matt.Bidewell/.docker/init-zsh.sh || true # Added by Docker Desktop

ssh-add --apple-use-keychain ~/.ssh/id_ed25519
